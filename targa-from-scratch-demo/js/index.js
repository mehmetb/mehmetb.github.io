(()=>{function d(o){return new Promise((e,i)=>{let t=new FileReader;t.addEventListener("load",()=>{let r=t.result;e(r)}),t.addEventListener("error",i),t.readAsArrayBuffer(o)})}var l=(n=>(n[n.NO_IMAGE_DATA=0]="NO_IMAGE_DATA",n[n.COLOR_MAPPED=1]="COLOR_MAPPED",n[n.TRUE_COLOR=2]="TRUE_COLOR",n[n.GRAY_SCALE=3]="GRAY_SCALE",n[n.RUN_LENGTH_ENCODED_COLOR_MAPPED=9]="RUN_LENGTH_ENCODED_COLOR_MAPPED",n[n.RUN_LENGTH_ENCODED_TRUE_COLOR=10]="RUN_LENGTH_ENCODED_TRUE_COLOR",n[n.RUN_LENGTH_ENCODED_GRAY_SCALE=11]="RUN_LENGTH_ENCODED_GRAY_SCALE",n))(l||{});var g=class{decodedArrayBuffer;readerDataView;writerDataView;pixelSize;readCursor=0;writeCursor=0;constructor(e,i,t,r){this.decodedArrayBuffer=new ArrayBuffer(i*t*r),this.readerDataView=new DataView(e),this.writerDataView=new DataView(this.decodedArrayBuffer),this.pixelSize=r}read(){let e=this.readerDataView.getUint8(this.readCursor);return this.readCursor+=1,e}write(e){this.writerDataView.setUint8(this.writeCursor,e),this.writeCursor+=1}readNextPixel(){let e=[];for(let i=0;i<this.pixelSize;++i)e.push(this.read());return e}writePixel(e){for(let i of e)this.write(i)}decode(){for(;this.readCursor<this.readerDataView.byteLength;){let e=this.read();if(e>=128){let i=e-128,t=this.readNextPixel();for(let r=0;r<=i;++r)this.writePixel(t)}else{let i=e;for(let t=0;t<=i;++t){let r=this.readNextPixel();this.writePixel(r)}}}return this.decodedArrayBuffer}};function u(o,e,i,t){return new g(o,e,i,t).decode()}var h=class{arrayBuffer;dataView;colorMapType;imageType;xOrigin;yOrigin;imageWidth;imageHeight;pixelSize;imageDescriptor;imageIdentificationFieldLength;imageDataFieldOffset;colorMapOrigin;colorMapLength;colorMapPixelSize;constructor(e){this.arrayBuffer=e,this.dataView=new DataView(e),this.colorMapType=this.getColorMapType(),this.imageType=this.getImageType(),this.xOrigin=this.getXOrigin(),this.yOrigin=this.getYOrigin(),this.imageWidth=this.getImageWidth(),this.imageHeight=this.getImageHeight(),this.pixelSize=this.getPixelSize(),this.imageDescriptor=this.getImageDescriptor(),this.imageIdentificationFieldLength=this.getImageIdentificationFieldLength(),this.colorMapOrigin=this.getColorMapOrigin(),this.colorMapLength=this.getColorMapLength(),this.colorMapPixelSize=this.getColorMapPixelSize(),this.imageDataFieldOffset=this.getImageDataFieldOffset()}getColorMapType(){return this.dataView.getUint8(1)}getColorMapOrigin(){return this.dataView.getUint16(3,!0)}getColorMapLength(){return this.dataView.getUint16(5,!0)}getColorMapPixelSize(){return this.dataView.getUint8(7)/8}getImageType(){return this.dataView.getUint8(2)}getXOrigin(){return this.dataView.getUint16(8)}getYOrigin(){return this.dataView.getUint16(10)}getImageWidth(){return this.dataView.getUint16(12,!0)}getImageHeight(){return this.dataView.getUint16(14,!0)}getPixelSize(){return this.dataView.getUint8(16)/8}getImageDescriptor(){return this.dataView.getUint8(17)}getImageIdentificationFieldLength(){return this.dataView.getUint8(0)}getImageDataFieldOffset(){switch(this.colorMapType){case 0:return 18+this.imageIdentificationFieldLength;case 1:return 18+this.imageIdentificationFieldLength+this.colorMapLength*this.colorMapPixelSize;default:throw new Error(`Color Map Type "${this.colorMapType}" is not supported!`)}}isTopToBottom(){return(4&this.imageDescriptor)===4}getPixelOffset(e,i){let t;if(this.isTopToBottom()?t=i*this.imageWidth*this.pixelSize+e*this.pixelSize:t=(this.imageHeight-i-1)*this.imageWidth*this.pixelSize+e*this.pixelSize,t+=this.imageDataFieldOffset,this.colorMapType===0)return t;if(this.colorMapType===1)return this.pixelSize===2?t=this.dataView.getUint16(t,!0):t=this.dataView.getUint8(t),18+this.imageIdentificationFieldLength+this.colorMapOrigin+t*this.colorMapPixelSize;throw new Error(`Color map type ${this.colorMapType} is not supported`)}getPixelColor(e,i){let t=this.colorMapType===0?this.pixelSize:this.colorMapPixelSize,r=this.getPixelOffset(e,i);switch(t){case 3:{let a=this.dataView.getUint8(r),s=this.dataView.getUint8(r+1);return{red:this.dataView.getUint8(r+2),green:s,blue:a,alpha:255,offset:r}}default:break}return null}decodeRunLengthEncoding(){let e=u(this.arrayBuffer.slice(this.imageDataFieldOffset),this.imageWidth,this.imageHeight,this.pixelSize),i=new ArrayBuffer(e.byteLength+this.imageDataFieldOffset),t=new DataView(i);for(let a=0;a<this.imageDataFieldOffset;++a){let s=this.dataView.getUint8(a);t.setUint8(a,s)}let r=new DataView(e);for(let a=0;a<e.byteLength;++a){let s=r.getUint8(a);t.setUint8(this.imageDataFieldOffset+a,s)}this.arrayBuffer=i,this.dataView=t}draw(e){let i=e.getContext("2d");if(!i){alert("Failed to get canvas context");return}this.imageType>8&&this.decodeRunLengthEncoding(),i.clearRect(0,0,e.width,e.height),e.width=this.imageWidth,e.height=this.imageHeight;let t=i.createImageData(this.imageWidth,this.imageHeight);for(let r=0;r<this.imageHeight;++r)for(let a=0;a<this.imageWidth;++a){let s=this.getPixelColor(a,r);if(!s){alert("Pixel size is not supported");return}let n=r*this.imageWidth*4+a*4;t.data[n]=s.red,t.data[n+1]=s.green,t.data[n+2]=s.blue,t.data[n+3]=s.alpha}i.putImageData(t,0,0)}toJSON(){return JSON.stringify(this.getStats(),null,2)}toTable(){let e=this.getStats(),i={};for(let[t,r]of Object.entries(e)){let s=`${t[0].toUpperCase()}${t.replace(/([A-Z])/g," $1").substring(1)}`;i[s]=r}return i}getStats(){return{colorMapType:this.colorMapType,imageType:l[this.imageType],xOrigin:this.xOrigin,yOrigin:this.yOrigin,imageWidth:this.imageWidth,imageHeight:this.imageHeight,pixelSize:this.pixelSize,imageDescriptor:this.imageDescriptor.toString(2),imageIdentificationFieldLength:this.imageIdentificationFieldLength,topToBottom:this.isTopToBottom(),colorMapOrigin:this.colorMapOrigin,colorMapLength:this.colorMapLength,colorMapPixelSize:this.colorMapPixelSize}}};new EventSource("/esbuild").addEventListener("change",()=>location.reload());var p=document.querySelector("input[type=file]"),f=document.querySelector("canvas"),c=document.querySelector("table"),m=document.querySelector("#row");function w(o){c.innerHTML="";let e=o.toTable();for(let[i,t]of Object.entries(e)){let r=m.content.cloneNode(!0),a=r.querySelectorAll("td");a[0].innerText=i,a[1].innerText=t,c.appendChild(r)}}async function b(){try{let{files:o}=p;if(!o?.length)return;let e=o.item(0);if(!e)return;let i=await d(e),t=new h(i);w(t),t.draw(f)}catch(o){alert(o.message)}}p.addEventListener("change",()=>{b()});})();
